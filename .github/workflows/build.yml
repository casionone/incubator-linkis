#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Build

on:
  push:
  pull_request:

env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard -Dmaven.wagon.http.retryHandler.count=3 -Dmaven.wagon.httpconnectionManager.ttlSeconds=120

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.17.3]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: 8
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: Code format check
      run: |
          ./mvnw -N install
          ./mvnw spotless:check
    - name: Build backend by maven
      run: |
          ./mvnw -N install
          ./mvnw clean package
    - name: Build frontend by node.js
      run: |
          cd web
          npm install
          npm run build
    - name: Generate install package
      run: |
        echo "workspace: "`pwd`
        cd ../
        echo running on branch ${GITHUB_REF##*/}
        branch=${GITHUB_REF##*/}
        version=$branch.`date +"%Y%m%d_%H%M%S"`
        pkgName=apache-linkis-$version-package.tar.gz
        tarName=apache-linkis-$version.tar.gz

        cp -r linkis-engineconn-plugins/engineconn-plugins/flink/target/out/*  assembly-combined-package/target/apache-linkis-*-incubating-bin/linkis-package/lib/linkis-engineconn-plugins/
        cp -r linkis-engineconn-plugins/engineconn-plugins/io_file/target/out/* assembly-combined-package/target/apache-linkis-*-incubating-bin/linkis-package/lib/linkis-engineconn-plugins/
        cp -r linkis-engineconn-plugins/engineconn-plugins/jdbc/target/out/*    assembly-combined-package/target/apache-linkis-*-incubating-bin/linkis-package/lib/linkis-engineconn-plugins/
        cp -r linkis-engineconn-plugins/engineconn-plugins/pipeline/target/out/*  assembly-combined-package/target/apache-linkis-*-incubating-bin/linkis-package/lib/linkis-engineconn-plugins/
        cp  web/apache-linkis-*-incubating-web-bin.tar.gz   assembly-combined-package/target/apache-linkis-*-incubating-bin/
#         重新打包tar
        tar -czvf  $tarName -C  assembly-combined-package/target/apache-linkis-*-incubating-bin/ ./

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3.8.0
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/dev')
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: assembly-combined-package/target/
        publish_branch: asf-staging